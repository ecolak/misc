<?xml version="1.0"?>
<configuration>
   
    <appender name="ServerAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/server.log</file>
         
        <!-- This will create server.1.log, server.2.log etc. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
           <fileNamePattern>${LOG_HOME}/server.%i.log</fileNamePattern>
           <minIndex>1</minIndex>
           <maxIndex>100</maxIndex>
        </rollingPolicy>
        
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
           <maxFileSize>5MB</maxFileSize>
        </triggeringPolicy>
            
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%thread] - %msg%n</pattern>
        </encoder>
        
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      		<level>${LOG_LEVEL}</level>
    	</filter>
    </appender>
    
    <appender name="ErrorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/error.log</file>
        
        <!-- This will create error.1.log, error.2.log etc. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
           <fileNamePattern>${LOG_HOME}/error.%i.log</fileNamePattern>
           <minIndex>1</minIndex>
           <maxIndex>100</maxIndex>
        </rollingPolicy>
        
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
           <maxFileSize>5MB</maxFileSize>
        </triggeringPolicy>
        
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%thread] - %msg%n</pattern>
        </encoder>
        
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      		<level>ERROR</level>
    	</filter>
    </appender>
    
    <logger name="org.hibernate" level="INFO" />
    
    <root>
    	<appender-ref ref="ServerAppender" />
    	<appender-ref ref="ErrorAppender" />
  	</root>
    
</configuration>