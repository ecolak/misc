<?xml version="1.0"?>
<configuration>
	<property name="LOG_HOME" value="var/log" />
   
    <appender name="ServerAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/server.log</file>
         
        <!-- This will create server.1.log, server.2.log etc. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
           <fileNamePattern>${LOG_HOME}/server.%i.log</fileNamePattern>
           <minIndex>1</minIndex>
           <maxIndex>100</maxIndex>
        </rollingPolicy>
        
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
           <maxFileSize>5MB</maxFileSize>
        </triggeringPolicy>
            
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%thread] - %msg%n</pattern>
        </encoder>
        
        <!-- set log level to INFO for server.log -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
	        <level>INFO</level>
	        <onMatch>ACCEPT</onMatch>
	        <onMismatch>DENY</onMismatch>
	    </filter>
    </appender>
    
    <appender name="ErrorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/error.log</file>
        
        <!-- This will create error.1.log, error.2.log etc. -->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
           <fileNamePattern>${LOG_HOME}/error.%i.log</fileNamePattern>
           <minIndex>1</minIndex>
           <maxIndex>100</maxIndex>
        </rollingPolicy>
        
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
           <maxFileSize>5MB</maxFileSize>
        </triggeringPolicy>
        
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%thread] - %msg%n</pattern>
        </encoder>
        
        <!-- set log level to ERROR for error.log -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
	        <level>ERROR</level>
	        <onMatch>ACCEPT</onMatch>
	        <onMismatch>DENY</onMismatch>
	    </filter>
    </appender>
    
</configuration>